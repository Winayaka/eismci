# spring.datasource.platform = postgresql

# spring.datasource.url=jdbc:postgresql://@ec2-54-197-234-117.compute-1.amazonaws.com:5432/dfareo355mbdj2
# spring.datasource.username=aiwpcfhydfntou
# spring.datasource.password=6945b4cee282e045800323b6d0538cf01ed36da2112599f2ffdcdd908b6eb4e3

# spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

# # Pembuatan database (create || create-drop || validate || update)
# spring.jpa.hibernate.ddl-auto=update

# Konfigurasi untuk koneksi MySql
spring.datasource.platform=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Sesuaikan NAMA_DATABASE dengan nama database anda
spring.datasource.url=jdbc:mysql://localhost:3306/eisc6?useSSL=false&serverTimezone=Asia/Jakarta

# Sesuaikan dengan USERNAME dan PASSWORD mysql anda
spring.datasource.username=root
spring.datasource.password=
# Optimize query untuk db MySql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# Pembuatan database (create || create-drop || validate || update)
spring.jpa.hibernate.ddl-auto=update

# Port
server.port=8099

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
spring.jackson.serialization.fail-on-empty-beans=false